import{UmdLoader}from"../loader/umd-loader.js";const template=document.createElement("template");template.innerHTML='\n    <style>\n    :host {\n        display:grid;\n        grid-auto-rows: max-content;\n        grid-template-columns:auto;\n        grid-row-gap: 0.8rem;\n        overflow-x: hidden;\n        background-color: #f1f1f1;\n    }\n\n    :host([hidden]), [hidden] {\n        display:none !important;\n    }\n\n    .embed {\n        grid-row: 1;\n        grid-column:1;\n        background-color: #fff;\n    }\n\n    .loader {\n        grid-row:1/-1; \n        grid-column:1; \n        align-self: center;\n        justify-self: center;\n    }\n\n\n    </style>    \n    <umd-loader class="loader"></umd-loader>\n';export class UmdComponentPdf extends HTMLElement{static get observedAttributes(){return[]}constructor(){super(),this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(template.content.cloneNode(!0)),this._pdfsrc="//cdn.jsdelivr.net/npm/pdfjs-dist@2.5.207/build/pdf.min.js",this._workersrc="//cdn.jsdelivr.net/npm/pdfjs-dist@2.5.207/build/pdf.worker.min.js",this._loaded=!1,"undefined"!=typeof pdfjsLib&&(this._loaded=!0)}connectedCallback(){this.checkNload()}async checkNload(){this._loaded||(await this._loadScript(),this._loaded=!0),this._loadPDF()}_loadScript(){return new Promise(resolve=>{const script=document.createElement("script");script.onload=()=>{pdfjsLib.GlobalWorkerOptions.workerSrc=this._workersrc,resolve()},script.src=this._pdfsrc,document.head.append(script)})}async _loadPDF(){const path=this.getAttribute("data-url");if(!path)return;const loadingTask=pdfjsLib.getDocument(path),pdf=await loadingTask.promise;for(let i=1;i<=pdf.numPages;i++)await this._addPage(pdf,i);this._shadowRoot.querySelector(".loader").setAttribute("hidden","")}async _addPage(pdf,pgno){const page=await pdf.getPage(pgno),viewport=page.getViewport({scale:1}),h2w=viewport.height/viewport.width,canvas=document.createElement("canvas");canvas.classList.add("embed"),canvas.style.gridRow=pgno,canvas.width=this.offsetWidth,canvas.height=h2w*this.offsetWidth;let pdfScale=1;viewport.width>canvas.width&&(pdfScale=canvas.width/viewport.width);const context=canvas.getContext("2d"),pdfport=page.getViewport({scale:pdfScale}),renderContext={canvasContext:context,viewport:pdfport};await page.render(renderContext),this.shadowRoot.appendChild(canvas)}attributeChangedCallback(name,oldVal,newVal){}disconnectedCallback(){}}window.customElements.define("umd-component-pdf",UmdComponentPdf);