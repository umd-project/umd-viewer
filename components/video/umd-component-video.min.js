import{UmdLoader}from"../loader/umd-loader.js";const template=document.createElement("template");template.innerHTML='\n    <style>\n      :host {\n        display:grid;\n        grid-template-rows: max-content;\n        grid-template-columns: auto;\n      }\n\n      :host([hidden]) {\n        display:none;\n      }\n\n      [hidden] {\n        display: none !important;\n      }\n\n      .dummy {\n        grid-row: 1;\n        grid-column: 1;\n      }\n\n      iframe {\n        grid-row: 1;\n        grid-column:1;\n        object-fit: contain;\n        width:100%;\n      }\n\n      .video {\n        grid-row: 1;\n        grid-column:1;\n        object-fit: contain;\n        width:100%;\n      }\n  \n      .loader {\n        grid-row:1;\n        grid-column:1;\n        align-self: center;\n        justify-self: center;\n      }\n\n    </style>\n    <video class="video" controls hidden></video>\n    <iframe frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen hidden></iframe>\n    <umd-loader class="loader" hidden></umd-loader>\n';export class UmdComponentVideo extends HTMLElement{static get observedAttributes(){return["data-source","data-url","data-aspect"]}constructor(){super(),this._shadowRoot=this.attachShadow({mode:"open"}),this._shadowRoot.appendChild(template.content.cloneNode(!0));const observer=new IntersectionObserver((entry,observer)=>{this._calibrateWH()});observer.observe(this._shadowRoot.querySelector("iframe"))}connectedCallback(){this._loadVideo()}_loadVideo(){this._shadowRoot.querySelector("video").setAttribute("hidden",""),this._shadowRoot.querySelector("iframe").setAttribute("hidden","");const _url=this.getAttribute("data-url");if(!_url)return;let _source="embed";switch(this.getAttribute("data-source")&&(_source=this.getAttribute("data-source")),_source){case"embed":this._loadEmbedVideo(_url);break;case"include":this._loadIncludeVideo(_url)}}_calibrateWH(){const _video=this._shadowRoot.querySelector("iframe"),w=this.offsetWidth,_aspect=this.getAttribute("data-aspect");let h2w=9/16;if(_aspect){const _aspectarr=_aspect.split(":");if(2==_aspectarr.length){const _aspectW=parseInt(_aspectarr[0]),_aspectH=parseInt(_aspectarr[1]);0!=_aspectW&&0!=_aspectH&&(h2w=_aspectH/_aspectW)}}let h=parseInt(w*h2w);_video.setAttribute("width",`${w}px`),_video.setAttribute("height",`${h}px`)}_loadEmbedVideo(url){const _loader=this._shadowRoot.querySelector(".loader"),_video=this._shadowRoot.querySelector("iframe");_loader.removeAttribute("hidden"),_video.addEventListener("load",(function(e){_loader.setAttribute("hidden","hidden"),_video.removeAttribute("hidden")})),_video.addEventListener("error",(function(e){_loader.setAttribute("hidden","hidden")})),_video.src=url}_loadIncludeVideo(url){const _loader=this._shadowRoot.querySelector(".loader"),_video=this._shadowRoot.querySelector("video");_loader.removeAttribute("hidden"),_video.addEventListener("loadeddata",(function(e){_loader.setAttribute("hidden","hidden"),_video.removeAttribute("hidden")})),_video.addEventListener("error",(function(e){_loader.setAttribute("hidden","hidden")})),_video.src=url}stopVideo(){this._shadowRoot.querySelector("iframe").src="",this._shadowRoot.querySelector(".video").src=""}attributeChangedCallback(name,oldVal,newVal){}disconnectedCallback(){}}window.customElements.define("umd-component-video",UmdComponentVideo);