import MarkdownIt from"markdown-it";const template=document.createElement("template");template.innerHTML='\n    <style>\n    :host {\n        display: grid;\n        grid-template-rows: max-content;\n        grid-template-columns: auto;\n        align-items: center;\n        padding-left: 1.6rem !important;\n        padding-right: 1.6rem !important;\n        padding-top: 1.6rem !important;\n        padding-bottom: 1.6rem !important;\n    }\n    :host([disabled]) {\n        color: var(--theme-message-color);    \n    }\n\n    :host([hidden]) {\n        display:none;\n    }  \n\n    .html {\n        grid-row: 1;\n        border: 0;\n    }\n\n    code {\n        background-color: #efefef;\n        line-height: 1.25;\n    }\n\n    pre {\n        background-color: #efefef;\n        padding-top: 0.8rem;\n        padding-bottom: 0.8rem;\n        padding-left: 1.6rem;\n        padding-right: 1.6rem;\n    }\n\n    table {\n        width: 100%;\n        border-spacing: 0.4rem;\n        border-collapse: collapse;\n    }\n\n    th {\n        border-bottom: solid 2px #ccc;\n        border-top: solid 1px #eee;\n        line-height: 2;\n        text-align: left;\n    }\n\n    td {\n        line-height: 1.5;\n    }\n\n    </style>\n    <div class="html"></html>\n';export class UmdComponentMd extends HTMLElement{static get observedAttributes(){return["data-text","data-url"]}constructor(){super(),this._shadowRoot=this.attachShadow({mode:"closed"}),this._shadowRoot.appendChild(template.content.cloneNode(!0))}connectedCallback(){}attributeChangedCallback(name,oldVal,newVal){switch(newVal="undefined"===newVal?"":newVal,name){case"data-text":newVal&&this._convertText(newVal);break;case"data-url":newVal&&this._loadFile(newVal)}}_convertText(t){const md=new MarkdownIt;this._shadowRoot.querySelector(".html").innerHTML=md.render(t)}_loadFile(url){fetch(url).then(resp=>resp.text()).then(t=>{this._convertText(t)})}disconnectedCallback(){}}const md=new MarkdownIt;window.customElements.define("umd-component-md",UmdComponentMd);