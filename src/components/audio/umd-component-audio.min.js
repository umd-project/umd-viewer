import{UmdLoader}from"../loader/umd-loader.js";const template=document.createElement("template");template.innerHTML='\n    <style>\n    :host {\n        min-height: 3.2rem;\n        display: grid;\n        grid-template-rows: max-content;\n        grid-template-columns: auto;\n        align-items: center;\n    }\n    :host([disabled]) {\n        color: var(--theme-message-color);    \n    }\n\n    :host([hidden]) {\n        display:none;\n    }  \n\n    .loader, .audio {\n        grid-row: 1;\n        grid-column:1;\n        align-self: center;\n        justify-self: center;\n    }\n\n    .audio {\n        outline: none;\n        border: 0;\n    }\n\n    .audio:focus {\n        outline: none;\n        border: 0;\n    }\n\n    </style>\n    <audio class="audio" controls controlsList="nodownload" hidden>Audio</audio>\n    <umd-loader class="loader" hidden></umd-loader>\n';export class UmdComponentAudio extends HTMLElement{static get observedAttributes(){return["data-url"]}constructor(){super(),this._shadowRoot=this.attachShadow({mode:"closed"}),this._shadowRoot.appendChild(template.content.cloneNode(!0))}connectedCallback(){}attributeChangedCallback(name,oldVal,newVal){switch(newVal="undefined"===newVal?"":newVal,name){case"data-url":newVal&&this._setAudio(newVal)}}async _setAudio(url){const _loader=this._shadowRoot.querySelector(".loader"),_audio=this._shadowRoot.querySelector("audio");_loader.removeAttribute("hidden"),_audio.onloadeddata=function(){_audio.removeAttribute("hidden"),_loader.setAttribute("hidden","")},_audio.src=url}stopAudio(){const _ele=this._shadowRoot.querySelector("audio");_ele&&(_ele.src="")}disconnectedCallback(){}}window.customElements.define("umd-component-audio",UmdComponentAudio);